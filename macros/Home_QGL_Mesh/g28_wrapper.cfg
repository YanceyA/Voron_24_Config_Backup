[gcode_macro G28]
rename_existing: G28.1
variable_output: 118
gcode:
  !# Determine requested axes
  !try:
  !  raw_lower = (rawparams or "").lower()
  !except NameError:
  !  raw_lower = ""
  !requested_axes = set()
  !# Parse bare flags from raw tokens (e.g., "x y" or "xyz")
  !for token in raw_lower.split():
  !  for ch in token:
  !    if ch in ("x", "y", "z"):
  !      requested_axes.add(ch)
  !# Also accept X=1 Y=1 Z=1 style params just in case
  !for letter in ("X", "Y", "Z"):
  !  if letter in params:
  !    requested_axes.add(letter.lower())
  !# Printer state
  !homed_axes_raw = (printer["toolhead"].get("homed_axes") or "")
  !homed_axes = set(homed_axes_raw.lower())
  !unhomed_axes = {"x", "y", "z"} - homed_axes
  !status_code = own_vars.output
  !# Behavior:
  !# - If explicit axes requested, always (re)home those axes.
  !# - If none specified, home only unhomed axes; if none unhomed, print status.
  !if requested_axes:
  !  for axis in ("x", "y", "z"):
  !    if axis in requested_axes:
  !      emit(f"M{status_code} Homing {axis.upper()} axis")
  !      emit(f"G28.1 {axis.upper()}")
  !else:
  !  if not unhomed_axes:
  !    emit(f"M{status_code} All axes already homed")
  !  elif unhomed_axes == {"x", "y", "z"}:
  !    emit(f"M{status_code} Homing all axes")
  !    emit("G28.1")
  !  else:
  !    for axis in ("x", "y", "z"):
  !      if axis in unhomed_axes:
  !        emit(f"M{status_code} Homing {axis.upper()} axis")
  !        emit(f"G28.1 {axis.upper()}")

