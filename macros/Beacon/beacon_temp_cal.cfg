[gcode_macro BEACON_CALIBRATE_NOZZLE_TEMP_OFFSET]
gcode:
		{% set temp_print = params.TEMP_PRINT|default(250)|float %}
		{% set temp_probe = params.TEMP_PROBE|default(150)|float %}
		
		RESPOND TYPE=command MSG='Nozzle temperature offset calibration...'

		# settle the mechanics down  
		{% for i in range(10) %}
			beacon_poke speed=3 top=5 bottom=-0.6
		{% endfor %}

		#Temp Probe
		# get and set start temperature offset 
		RESPOND TYPE=command MSG='Waiting for nozzle to reach {temp_probe}째C...'
		M104 S{temp_probe}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp_probe - 1} MAXIMUM={temp_probe + 2}
	
		# wait for temperature to settle down
		RESPOND TYPE=command MSG='Waiting 60s for thermal expansion...'
		G4 P60000

		# probe
		RESPOND TYPE=command MSG='Probing with nozzle temperature {temp_probe}째C...'
		PROBE PROBE_METHOD=contact PROBE_SPEED=3 LIFT_SPEED=15 SAMPLES=5 SAMPLE_RETRACT_DIST=3 SAMPLES_TOLERANCE=0.005 SAMPLES_TOLERANCE_RETRIES=10 SAMPLES_RESULT=median
		G4 P2000 #added, otherwise following beacon_query returns inf error.
		BEACON_QUERY
		{% set z_probe = printer.beacon.last_z_result|default(0)|float %}

		#Temp 2 Probe
		# get and set start temperature offset 
		RESPOND TYPE=command MSG='Waiting for nozzle to reach {temp_print}째C...'
		M104 S{temp_print}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp_print - 1} MAXIMUM={temp_print + 2}
	
		# wait for temperature to settle down
		RESPOND TYPE=command MSG='Waiting 60s for thermal expansion...'
		G4 P60000

		# probe
		RESPOND TYPE=command MSG='Probing with nozzle temperature {temp_print}째C...'
		PROBE PROBE_METHOD=contact PROBE_SPEED=3 LIFT_SPEED=15 SAMPLES=5 SAMPLE_RETRACT_DIST=3 SAMPLES_TOLERANCE=0.005 SAMPLES_TOLERANCE_RETRIES=10 SAMPLES_RESULT=median
		G4 P2000 #added, otherwise following beacon_query returns inf error.
		BEACON_QUERY
		{% set z_print = printer.beacon.last_z_result|default(0)|float %}

		# turn heater off
		M104 S0

		# echo results
		RESPOND TYPE=command MSG='Nozzle Expansion is {(z_print - z_probe)} mm'
		RESPOND TYPE=command MSG='Nozzle Expansion Coefficent is {((z_print - z_probe)/(temp_print - temp_probe))} mm / degC'